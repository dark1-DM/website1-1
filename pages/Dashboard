import React, { useState, useEffect } from "react";
import { DiscordBot } from "@/entities/DiscordBot";
import { Button } from "@/components/ui/button";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";
import { Plus, Bot, Zap, Users, Activity, Search } from "lucide-react";
import { motion, AnimatePresence } from "framer-motion";
import { Input } from "@/components/ui/input";

import StatsOverview from "../components/dashboard/StatsOverview";
import BotGrid from "../components/dashboard/BotGrid";
import RecentActivity from "../components/dashboard/RecentActivity";

export default function Dashboard() {
  const [bots, setBots] = useState([]);
  const [isLoading, setIsLoading] = useState(true);
  const [searchQuery, setSearchQuery] = useState("");

  useEffect(() => {
    loadBots();
  }, []);

  const loadBots = async () => {
    setIsLoading(true);
    try {
      const data = await DiscordBot.list("-created_date");
      setBots(data);
    } catch (error) {
      console.error("Error loading bots:", error);
    }
    setIsLoading(false);
  };

  const handleBotUpdate = async (botId, updates) => {
    try {
      await DiscordBot.update(botId, updates);
      loadBots();
    } catch (error) {
      console.error("Error updating bot:", error);
    }
  };

  const onlineBots = bots.filter(bot => bot.status === 'online').length;
  const totalServers = bots.reduce((sum, bot) => sum + (bot.server_count || 0), 0);

  const filteredBots = bots.filter(bot =>
    bot.name.toLowerCase().includes(searchQuery.toLowerCase())
  );

  return (
    <div className="min-h-screen bg-[#1a1a1a] p-6">
      <div className="max-w-7xl mx-auto">
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          className="flex flex-col md:flex-row justify-between items-start md:items-center mb-8 gap-4"
        >
          <div>
            <h1 className="text-3xl md:text-4xl font-bold text-white mb-2">
              Bot Dashboard
            </h1>
            <p className="text-gray-400 text-lg">
              Manage and monitor your Discord bots
            </p>
          </div>
          <div className="flex items-center gap-4 w-full md:w-auto">
            <div className="relative w-full md:w-64">
              <Search className="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400" />
              <Input 
                placeholder="Search bots..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                className="bg-[#2C2F33] border-gray-700 text-white pl-10 focus:border-[#5865F2]"
              />
            </div>
            <Link to={createPageUrl("AddBot")}>
              <Button className="bg-[#5865F2] hover:bg-[#4752C4] text-white font-medium px-6 py-3 rounded-lg transition-all duration-200 shadow-lg hover:shadow-xl flex-shrink-0">
                <Plus className="w-5 h-5 mr-2" />
                Add New Bot
              </Button>
            </Link>
          </div>
        </motion.div>

        <StatsOverview 
          totalBots={bots.length}
          onlineBots={onlineBots}
          totalServers={totalServers}
          isLoading={isLoading}
        />

        <div className="grid lg:grid-cols-3 gap-8 mt-8">
          <div className="lg:col-span-2">
            <BotGrid 
              bots={filteredBots}
              isLoading={isLoading}
              onBotUpdate={handleBotUpdate}
            />
          </div>

          <div>
            <RecentActivity bots={bots} />
          </div>
        </div>
      </div>
    </div>
  );
}