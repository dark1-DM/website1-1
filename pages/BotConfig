
import React, { useState, useRef } from "react";
import { DiscordBot } from "@/entities/DiscordBot";
import { Button } from "@/components/ui/button";
import { ArrowLeft, Upload, Bot } from "lucide-react";
import { useNavigate } from "react-router-dom";
import { createPageUrl } from "@/utils";
import { motion } from "framer-motion";
import { UploadFile } from "@/integrations/Core";
import { toast } from "sonner";

import BotForm from "../components/bot/BotForm";

export default function AddBot() {
  const navigate = useNavigate();
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [avatarFile, setAvatarFile] = useState(null);
  const [avatarPreview, setAvatarPreview] = useState(null);
  const fileInputRef = useRef(null);

  const handleSubmit = async (formData) => {
    setIsSubmitting(true);
    try {
      let avatarUrl = "";
      
      if (avatarFile) {
        const uploadResult = await UploadFile({ file: avatarFile });
        avatarUrl = uploadResult.file_url;
      }

      const botData = {
        ...formData,
        avatar_url: avatarUrl || formData.avatar_url || ""
      };

      await DiscordBot.create(botData);
      toast.success(`Bot "${botData.name}" has been created successfully!`);
      navigate(createPageUrl("Dashboard"));
    } catch (error) {
      console.error("Error creating bot:", error);
      toast.error("Failed to create bot. Please try again.");
    }
    setIsSubmitting(false);
  };

  const handleAvatarUpload = (event) => {
    const file = event.target.files[0];
    if (file) {
      setAvatarFile(file);
      const reader = new FileReader();
      reader.onload = (e) => setAvatarPreview(e.target.result);
      reader.readAsDataURL(file);
    }
  };

  return (
    <div className="min-h-screen bg-[#1a1a1a] p-6">
      <div className="max-w-2xl mx-auto">
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          className="flex items-center gap-4 mb-8"
        >
          <Button
            variant="ghost"
            size="icon"
            onClick={() => navigate(createPageUrl("Dashboard"))}
            className="text-gray-400 hover:text-white hover:bg-gray-800"
          >
            <ArrowLeft className="w-5 h-5" />
          </Button>
          <div>
            <h1 className="text-3xl font-bold text-white">Add New Bot</h1>
            <p className="text-gray-400 mt-1">Configure your Discord bot settings</p>
          </div>
        </motion.div>

        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.1 }}
          className="bg-[#2C2F33] rounded-xl p-8 shadow-2xl border border-gray-800"
        >
          <div className="flex items-center gap-3 mb-6">
            <div className="w-12 h-12 bg-gradient-to-r from-[#5865F2] to-[#7289DA] rounded-lg flex items-center justify-center">
              <Bot className="w-6 h-6 text-white" />
            </div>
            <div>
              <h2 className="text-xl font-semibold text-white">Bot Configuration</h2>
              <p className="text-gray-400 text-sm">Enter your bot details and token</p>
            </div>
          </div>

          <BotForm
            onSubmit={handleSubmit}
            isSubmitting={isSubmitting}
            avatarPreview={avatarPreview}
            onAvatarUpload={handleAvatarUpload}
            fileInputRef={fileInputRef}
          />
        </motion.div>
      </div>
    </div>
  );
}
