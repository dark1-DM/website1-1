import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Switch } from "@/components/ui/switch";
import { Button } from "@/components/ui/button";
import { Plus, X } from "lucide-react";

export default function TicketsConfig({ config, onChange }) {
  const handleToggle = (key, value) => onChange({ [key]: value });
  const handleInputChange = (key, value) => onChange({ [key]: value });

  const addSupportRole = () => {
    const roles = config.support_roles || [];
    onChange({ support_roles: [...roles, ''] });
  };
  const removeSupportRole = (index) => {
    const roles = config.support_roles || [];
    onChange({ support_roles: roles.filter((_, i) => i !== index) });
  };
  const updateSupportRole = (index, value) => {
    const roles = config.support_roles || [];
    roles[index] = value;
    onChange({ support_roles: [...roles] });
  };

  return (
    <div className="space-y-6">
      <Card className="bg-[#1a1a1a] border-gray-700">
        <CardHeader>
          <CardTitle className="text-white flex items-center justify-between">
            üéüÔ∏è Ticket System
            <div className="flex items-center gap-2">
              <Label className="text-sm text-gray-400">Enable Tickets</Label>
              <Switch checked={config.enabled} onCheckedChange={(v) => handleToggle('enabled', v)} />
            </div>
          </CardTitle>
        </CardHeader>
        {config.enabled && (
          <CardContent className="space-y-4">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <Label className="text-gray-300">Ticket Category ID</Label>
                <Input placeholder="Category for new tickets" value={config.ticket_category} onChange={(e) => handleInputChange('ticket_category', e.target.value)} className="bg-[#2C2F33] border-gray-600 text-white mt-2" />
              </div>
              <div>
                <Label className="text-gray-300">Transcripts Channel ID</Label>
                <Input placeholder="Channel for ticket transcripts" value={config.transcripts_channel} onChange={(e) => handleInputChange('transcripts_channel', e.target.value)} className="bg-[#2C2F33] border-gray-600 text-white mt-2" />
              </div>
            </div>
            <div>
              <Label className="text-gray-300">Max Open Tickets per User</Label>
              <Input type="number" min="1" value={config.max_tickets_per_user} onChange={(e) => handleInputChange('max_tickets_per_user', parseInt(e.target.value))} className="bg-[#2C2F33] border-gray-600 text-white mt-2" />
            </div>
            <div className="flex items-center justify-between">
              <Label className="text-gray-300">Confirm before closing ticket</Label>
              <Switch checked={config.close_confirmation} onCheckedChange={(v) => handleToggle('close_confirmation', v)} />
            </div>
          </CardContent>
        )}
      </Card>
      {config.enabled && (
        <Card className="bg-[#1a1a1a] border-gray-700">
          <CardHeader>
            <CardTitle className="text-white flex items-center justify-between">
              Support Roles
              <Button variant="outline" size="sm" onClick={addSupportRole} className="bg-[#2C2F33] border-gray-600 text-gray-300 hover:text-white"><Plus className="w-4 h-4 mr-2" /> Add Role</Button>
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-3">
            {(config.support_roles || []).map((role, index) => (
              <div key={index} className="flex gap-2">
                <Input placeholder="Role ID" value={role} onChange={(e) => updateSupportRole(index, e.target.value)} className="bg-[#2C2F33] border-gray-600 text-white" />
                <Button variant="outline" size="icon" onClick={() => removeSupportRole(index)} className="bg-[#2C2F33] border-gray-600 text-gray-400 hover:text-red-400"><X className="w-4 h-4" /></Button>
              </div>
            ))}
          </CardContent>
        </Card>
      )}
    </div>
  );
}