import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { MessageSquare, Plus, Clock } from "lucide-react";
import { format } from "date-fns";
import { motion } from "framer-motion";

export default function ConversationList({ conversations, onSelect, onNew }) {
  if (conversations.length === 0) {
    return null;
  }

  return (
    <Card className="bg-[#2C2F33] border-gray-800">
      <CardHeader>
        <CardTitle className="text-white flex items-center justify-between">
          <div className="flex items-center gap-2">
            <MessageSquare className="w-5 h-5" />
            Recent Conversations ({conversations.length})
          </div>
          <Button
            variant="outline"
            size="sm"
            onClick={onNew}
            className="bg-[#1a1a1a] border-gray-700 text-gray-300 hover:text-white"
          >
            <Plus className="w-4 h-4 mr-2" />
            New
          </Button>
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-3">
        {conversations.slice(0, 5).map((conversation, index) => (
          <motion.div
            key={conversation.id}
            initial={{ opacity: 0, y: 10 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: index * 0.1 }}
          >
            <Button
              variant="ghost"
              onClick={() => onSelect(conversation)}
              className="w-full bg-[#1a1a1a] hover:bg-gray-700 text-left p-4 h-auto justify-start border border-gray-700 hover:border-gray-600"
            >
              <div className="flex items-start gap-3 w-full">
                <div className="w-8 h-8 bg-gradient-to-r from-[#5865F2] to-[#7289DA] rounded-lg flex items-center justify-center flex-shrink-0">
                  <MessageSquare className="w-4 h-4 text-white" />
                </div>
                <div className="flex-1 min-w-0">
                  <h4 className="font-medium text-white truncate">
                    {conversation.metadata?.name || 'Unnamed Conversation'}
                  </h4>
                  <p className="text-sm text-gray-400 truncate">
                    {conversation.metadata?.description || 'Discord bot discussion'}
                  </p>
                  <div className="flex items-center gap-1 mt-1 text-xs text-gray-500">
                    <Clock className="w-3 h-3" />
                    {format(new Date(conversation.created_date), "MMM d, HH:mm")}
                  </div>
                </div>
              </div>
            </Button>
          </motion.div>
        ))}
        
        {conversations.length > 5 && (
          <p className="text-sm text-gray-500 text-center py-2">
            And {conversations.length - 5} more conversations...
          </p>
        )}
      </CardContent>
    </Card>
  );
}