import React, { useState } from 'react';
import { motion } from "framer-motion";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Switch } from "@/components/ui/switch";
import { 
  MoreVertical, 
  Users, 
  Edit, 
  Trash2, 
  Crown,
  Shield,
  Eye,
  AtSign
} from "lucide-react";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";

export default function RoleCard({ role, onEdit, onDelete, onUpdate }) {
  const [isUpdating, setIsUpdating] = useState(false);

  const getPermissionIcon = () => {
    if (role.permissions?.administrator) return <Crown className="w-4 h-4 text-yellow-400" />;
    if (role.permissions?.manage_guild || role.permissions?.manage_roles) return <Shield className="w-4 h-4 text-red-400" />;
    return <Users className="w-4 h-4 text-gray-400" />;
  };

  const getPermissionCount = () => {
    if (!role.permissions) return 0;
    return Object.values(role.permissions).filter(Boolean).length;
  };

  const handleToggle = async (key, value) => {
    setIsUpdating(true);
    await onUpdate(role.id, { [key]: value });
    setIsUpdating(false);
  };

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      exit={{ opacity: 0, y: -20 }}
      whileHover={{ y: -2 }}
      transition={{ duration: 0.2 }}
    >
      <Card className="bg-[#2C2F33] border-gray-800 hover:border-gray-700 transition-all duration-200">
        <CardContent className="p-6">
          <div className="flex items-start justify-between mb-4">
            <div className="flex items-center gap-3">
              <div 
                className="w-4 h-4 rounded-full border-2 border-gray-600"
                style={{ backgroundColor: role.role_color }}
              />
              <div>
                <h3 className="font-semibold text-white text-lg flex items-center gap-2">
                  {role.role_name}
                  {getPermissionIcon()}
                </h3>
                <div className="flex items-center gap-4 text-sm text-gray-400">
                  <span>Position: {role.position}</span>
                  <span>{getPermissionCount()} permissions</span>
                  {role.member_count > 0 && (
                    <span className="flex items-center gap-1">
                      <Users className="w-3 h-3" />
                      {role.member_count} members
                    </span>
                  )}
                </div>
              </div>
            </div>
            
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button variant="ghost" size="icon" className="text-gray-400 hover:text-white">
                  <MoreVertical className="w-4 h-4" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent className="bg-[#2C2F33] border-gray-700">
                <DropdownMenuItem onClick={() => onEdit(role)} className="text-gray-300 hover:text-white hover:bg-gray-700">
                  <Edit className="w-4 h-4 mr-2" />
                  Edit Role
                </DropdownMenuItem>
                <DropdownMenuItem 
                  onClick={() => onDelete(role.id)} 
                  className="text-red-400 hover:text-red-300 hover:bg-red-900/20"
                >
                  <Trash2 className="w-4 h-4 mr-2" />
                  Delete Role
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          </div>

          {role.description && (
            <p className="text-gray-400 text-sm mb-4">{role.description}</p>
          )}

          <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-4">
            <div className="flex items-center justify-between">
              <div className="flex items-center gap-2">
                <Eye className="w-4 h-4 text-gray-400" />
                <span className="text-sm text-gray-300">Display Separately</span>
              </div>
              <Switch
                checked={role.is_hoisted}
                onCheckedChange={(value) => handleToggle('is_hoisted', value)}
                disabled={isUpdating}
              />
            </div>

            <div className="flex items-center justify-between">
              <div className="flex items-center gap-2">
                <AtSign className="w-4 h-4 text-gray-400" />
                <span className="text-sm text-gray-300">Mentionable</span>
              </div>
              <Switch
                checked={role.is_mentionable}
                onCheckedChange={(value) => handleToggle('is_mentionable', value)}
                disabled={isUpdating}
              />
            </div>

            <div className="flex items-center justify-between">
              <div className="flex items-center gap-2">
                <Users className="w-4 h-4 text-gray-400" />
                <span className="text-sm text-gray-300">Auto-Assign</span>
              </div>
              <Switch
                checked={role.auto_assign}
                onCheckedChange={(value) => handleToggle('auto_assign', value)}
                disabled={isUpdating}
              />
            </div>

            <div className="bg-[#1a1a1a] rounded-lg p-3">
              <div className="text-center">
                <p className="text-lg font-semibold text-white">{role.member_count || 0}</p>
                <p className="text-xs text-gray-400">Members</p>
              </div>
            </div>
          </div>

          {role.permissions?.administrator && (
            <div className="bg-yellow-900/20 border border-yellow-500/30 rounded-lg p-3">
              <div className="flex items-center gap-2 text-yellow-400">
                <Crown className="w-4 h-4" />
                <span className="text-sm font-medium">Administrator Role</span>
              </div>
              <p className="text-xs text-yellow-300 mt-1">This role has all permissions</p>
            </div>
          )}
        </CardContent>
      </Card>
    </motion.div>
  );
}