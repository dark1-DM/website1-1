import React from 'react';
import { motion } from "framer-motion";
import { Card, CardContent, CardHeader } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { 
  MoreVertical, 
  Users, 
  Crown, 
  Eye, 
  Shield, 
  Edit, 
  Trash2,
  Bot
} from "lucide-react";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";

export default function RoleOverviewCard({ role, bots, onEdit, onDelete, onUpdate }) {
  const bot = bots.find(b => b.id === role.bot_id);
  const hasAdminPerms = role.permissions?.administrator;
  const memberCount = role.member_count || 0;

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      exit={{ opacity: 0, y: -20 }}
      whileHover={{ y: -2 }}
      transition={{ duration: 0.2 }}
    >
      <Card className="bg-[#2C2F33] border-gray-800 hover:border-gray-700 transition-all duration-200 overflow-hidden">
        <CardHeader className="pb-3">
          <div className="flex items-start justify-between">
            <div className="flex items-center gap-3 flex-1">
              <div 
                className="w-4 h-4 rounded-full flex-shrink-0"
                style={{ backgroundColor: role.role_color }}
              />
              <div className="min-w-0 flex-1">
                <h3 className="font-semibold text-white text-lg truncate">
                  {role.role_name}
                </h3>
                <div className="flex items-center gap-2 mt-1">
                  <Bot className="w-3 h-3 text-gray-400" />
                  <span className="text-xs text-gray-400 truncate">
                    {bot?.name || 'Unknown Bot'}
                  </span>
                </div>
              </div>
            </div>
            
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button variant="ghost" size="icon" className="text-gray-400 hover:text-white hover:bg-gray-700 h-8 w-8">
                  <MoreVertical className="w-4 h-4" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent className="bg-[#2C2F33] border-gray-700">
                <DropdownMenuItem 
                  onClick={() => onEdit(role)}
                  className="text-gray-300 hover:text-white hover:bg-gray-700"
                >
                  <Edit className="w-4 h-4 mr-2" />
                  Edit Role
                </DropdownMenuItem>
                <DropdownMenuItem 
                  onClick={() => onDelete(role.id)}
                  className="text-red-400 hover:text-red-300 hover:bg-gray-700"
                >
                  <Trash2 className="w-4 h-4 mr-2" />
                  Delete Role
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          </div>
        </CardHeader>

        <CardContent className="space-y-4">
          {role.description && (
            <p className="text-gray-400 text-sm line-clamp-2">
              {role.description}
            </p>
          )}

          <div className="flex flex-wrap gap-2">
            {hasAdminPerms && (
              <Badge className="bg-[#FAA61A] text-white text-xs">
                <Crown className="w-3 h-3 mr-1" />
                Admin
              </Badge>
            )}
            {role.is_hoisted && (
              <Badge className="bg-[#43B581] text-white text-xs">
                <Eye className="w-3 h-3 mr-1" />
                Hoisted
              </Badge>
            )}
            {role.auto_assign && (
              <Badge className="bg-[#5865F2] text-white text-xs">
                <Shield className="w-3 h-3 mr-1" />
                Auto-assign
              </Badge>
            )}
            {role.is_mentionable && (
              <Badge variant="outline" className="border-gray-600 text-gray-300 text-xs">
                @Mentionable
              </Badge>
            )}
          </div>

          <div className="grid grid-cols-2 gap-4">
            <div className="bg-[#1a1a1a] rounded-lg p-3">
              <div className="flex items-center gap-2 mb-1">
                <Users className="w-4 h-4 text-gray-400" />
                <span className="text-xs text-gray-400">Members</span>
              </div>
              <p className="text-sm font-semibold text-white">{memberCount}</p>
            </div>
            <div className="bg-[#1a1a1a] rounded-lg p-3">
              <div className="flex items-center gap-2 mb-1">
                <Crown className="w-4 h-4 text-gray-400" />
                <span className="text-xs text-gray-400">Position</span>
              </div>
              <p className="text-sm font-semibold text-white">{role.position}</p>
            </div>
          </div>

          {role.server_name && (
            <div className="pt-2 border-t border-gray-700">
              <p className="text-xs text-gray-500">
                Server: <span className="text-gray-300">{role.server_name}</span>
              </p>
            </div>
          )}
        </CardContent>
      </Card>
    </motion.div>
  );
}